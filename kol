boolean gameStarted = false; 
int energy = 100;
int timePassed = 480;
int continuousRunning = 0;

int playerX, playerY;
int playerWidth = 20;
int playerHeight = 40;
float playerSpeed = 2;

boolean inClass = false;
boolean inDormitory = false;
boolean inCafeteria = false;
boolean classChoiceMade = false;
boolean buyingProduct = false;
boolean loading = false;
int loadingStartTime;

void setup() {
  size(1200, 650); 
  playerX = 600;
  playerY = 600;
}

void draw() {
  if (!gameStarted) {
    drawMainScreen();
  } else if (loading) {
    drawLoadingScreen();
  } else {
    updateGameScene();
  }
}

void drawMainScreen() {
  background(50, 100, 200);
  textAlign(CENTER);
  fill(255);
  textSize(32);
  text("Студентська мурашина ферма", width / 2, height / 2 - 60);
  textSize(16);
  text("Натисніть 'R', щоб почати день", width / 2, height / 2 - 20);
  textAlign(LEFT);
  textSize(14);
  text("Інструкція для гравця:", width / 2 - 200, height / 2 + 40);
  text("1. Клавіші W, A, S, D - пересування персонажа.", width / 2 - 200, height / 2 + 60);
  text("2. Завдання:", width / 2 - 200, height / 2 + 80);
  text("   - Йдіть до коледжу для навчання.", width / 2 - 200, height / 2 + 100);
  text("   - Відвідайте їдальню, щоб поповнити енергію.", width / 2 - 200, height / 2 + 120);
  text("   - Зайдіть у гуртожиток, щоб поспілкуватися з друзями.", width / 2 - 200, height / 2 + 140);
  text("3. Уважно слідкуйте за часом, енергією та увагою!", width / 2 - 200, height / 2 + 160);
}

void keyPressed() {
  if (!gameStarted && key == 'r') {
    gameStarted = true;
  }
  if (gameStarted) {
    handleKeyInput();
  }
}

void handleKeyInput() {
  if (inDormitory) {
    handleDormitoryInput();
  } else if (inClass && !classChoiceMade) {
    handleClassInput();
  } else if (inCafeteria) {
    handleCafeteriaInput();
  } else {
    handlePlayerMovement();
  }
}

void handleDormitoryInput() {
  if (key == '5') {
    timePassed += 50;
    energy += 10;
    inDormitory = false;
  } else if (key == '7') {
    timePassed += 10;
    inDormitory = false;
  }
}

void handleClassInput() {
  if (key == 'l') {
    leaveClass();
  } else if (key == 's') {
    startListeningToTeacher();
  } else if (key == '1') {
    textSize(16);
    text("Ви: Привіт які в нас сьгодні пари?\nО: Матиматика та Українська", 1000, 500);
  }
}

void handleCafeteriaInput() {
  if (buyingProduct) {
    buyProduct();
  } else {
    if (key == 'e') {
      buyingProduct = true;
    } else if (key == 'l') {
      inCafeteria = false;
    }
  }
}

void buyProduct() {
  if (key == '1') {
    timePassed += 60;
  } else if (key == '2') {
    timePassed += 30;
  } else if (key == '3') {
    timePassed += 120;
  }
  buyingProduct = false;
}

void handlePlayerMovement() {
  boolean moved = false;
  if (key == 'w') { playerY -= 5 * playerSpeed; moved = true; }
  if (key == 's') { playerY += 5 * playerSpeed; moved = true; }
  if (key == 'a') { playerX -= 5 * playerSpeed; moved = true; }
  if (key == 'd') { playerX += 5 * playerSpeed; moved = true; }

  playerX = constrain(playerX, 0, width - playerWidth);
  playerY = constrain(playerY, 0, height - playerHeight);

  if (moved) {
    continuousRunning++;
  } else {
    continuousRunning = 0; 
  }

  checkLocations();
}

void checkLocations() {
  if (playerX > 100 && playerX < 130 && playerY > height - 375 && playerY < height - 325) {
    inDormitory = true;
  } else if (playerX > 850 && playerX < 925 && playerY > 300 && playerY < 350) {
    enterClass();
  } else if (playerX > 830 && playerX < 860 && playerY > 600 && playerY < 650) {
    enterCafeteria();
  }
}

void updateGameScene() {
  if (inClass) {
    drawClassScene();
  } else if (inDormitory) {
    drawDormitoryScene();
  } else if (inCafeteria) {
    if (buyingProduct) {
      drawProductChoice();
    } else {
      drawCafeteriaScene();
    }
  } else {
    drawGameScene();
  }
  drawHUD();
  updateResources();
  checkEndOfDay();
}




void drawGameScene() {
  background(200);
  drawDormitory();
  drawCollege();
  drawCafeteria();
  drawInfoTable();
  drawPlayer();
  
   drawBenches();  // Малюємо лавки
  drawTrees();    // Малюємо дерева
  
}

void drawTrees() {
  // Встановлюємо фіксовані місця для дерев
  drawTree(300, height - 180); // Друге дерево
  drawTree(500, height - 160); // Третє дерево
  drawTree(700, height - 190); // Четверте дерево
}

void drawTree(float x, float y) {
  // Створення стовбура дерева
  fill(139, 69, 19); // Коричневий колір для стовбура
  rect(x - 5, y, 10, 40); // Стовбур
  
  // Створення крони дерева
  fill(34, 139, 34); // Зелений колір для крони
  ellipse(x, y - 15, 40, 40); // Крона
}

void drawBenches() {
  // Створюємо лавиці в кожному з місць
  drawBench(375, height - 150);  // Їдальня
  drawBench(600, height - 150);  // Коледж
}

void drawBench(float x, float y) {
  // Малюємо лавку
  fill(160, 82, 45);  // Коричневий колір для лавки
  rect(x - 25, y, 50, 10); // Сидіння лавки
  rect(x - 25, y + 10, 10, 20); // Лівий ніж лавки
  rect(x + 15, y + 10, 10, 20); // Правий ніж лавки
}





void drawClassScene() {
  background(200);
  fill(255, 100, 100);
  rect(0, 0, width, height);
  drawClassroom();
}

void drawClassroom() {
  fill(173, 216, 230);
  rect(200, 50, 200, 100);
  rect(500, 50, 200, 100);
  rect(800, 50, 200, 100);
  fill(255, 220, 150);
  ellipse(width / 2, 150, 40, 40);
  fill(0, 0, 0);
  rect(width / 2 - 20, 170, 40, 60);
  fill(0, 128, 0);
  rect(width / 4, 200, width / 2, 100);
  drawDesks();
  fill(0);
  textAlign(CENTER);
  textSize(30);
  text("Ви в класі!", 1050, 40);
  textSize(20);
  text("Вчителька", width / 2, 250);
  textSize(16);
  text("Натисніть 'L', щоб піти геть або 'S', щоб слухати", width / 2, 280);
  text("Щоб поговорити з однокласником натисніть '1'", 1000, 400);
}

void drawDesks() {
  fill(139, 69, 19);
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 4; j++) {
      rect(200 + j * 200, 350 + i * 100, 150, 50);
    }
  }
}

void drawDormitoryScene() {
  background(200);
  
  // Текст заголовку
  fill(255, 255, 0);
  textAlign(CENTER);
  textSize(32);
  text("Ви в гуртожитку!", width / 2, height / 2 - 100);

  // Текст вибору дій
  textSize(20);
  text("Ого, давно не бачились, поп'ємо кави?", width / 2, height / 2);

  // Кнопки для вибору дій
  textSize(16);
  text("Натисніть '5', щоб піти на каву (50 хвилин)", width / 2, height / 2 + 40);
  text("Натисніть '7', щоб піти з гуртожитку (10 хвилин)", width / 2, height / 2 + 60);

  // Візуальні об'єкти

  // Малюємо друга
  fill(255, 224, 185); // Колір шкіри друга
  ellipse(width / 3, height / 2 + 100, 40, 40); // Голова друга
  fill(0); // Колір очей
  ellipse(width / 3 - 10, height / 2 + 90, 5, 5); // Ліве око
  ellipse(width / 3 + 10, height / 2 + 90, 5, 5); // Праве око
  fill(0, 0, 255); // Колір одягу
  rect(width / 3 - 15, height / 2 + 120, 30, 40); // Тіло друга

  // Малюємо ліжко
  fill(139, 69, 19); // Колір ліжка (дерев'яне)
  rect(width / 2 - 80, height / 2 + 150, 160, 40); // Основа ліжка
  fill(255, 0, 0); // Колір ковдри
  rect(width / 2 - 80, height / 2 + 150, 160, 30); // Ковдра на ліжку

  // Малюємо стіл
  fill(160, 82, 45); // Колір столу (дерев'яний)
  rect(width / 1.5, height / 2 + 130, 100, 50); // Столик
  fill(255); // Колір для чашки
  ellipse(width / 1.5 + 40, height / 2 + 150, 20, 20); // Чашка кави

  // Малюємо їжу
  fill(255, 165, 0); // Колір їжі
  ellipse(width / 1.5 + 30, height / 2 + 180, 20, 20); // Тарілка їжі (квадрат чи коло)

  // Малюємо стілець
  fill(139, 69, 19); // Колір для стільця
  rect(width / 1.5 - 10, height / 2 + 180, 30, 30); // Спинка стільця
  rect(width / 1.5 - 10, height / 2 + 210, 60, 10); // Сидіння стільця

  // Малюємо вікно
  fill(135, 206, 235); // Колір неба
  rect(width - 150, height / 2 - 40, 100, 80); // Вікно
  stroke(0); // Колір рамки вікна
  line(width - 100, height / 2 - 40, width - 100, height / 2 + 40); // Вертикальна рамка
  line(width - 150, height / 2 - 10, width - 50, height / 2 - 10); // Горизонтальна рамка

  // Малюємо двері
  fill(160, 82, 45); // Колір дверей
  rect(width / 2 + 120, height / 2 + 100, 50, 80); // Двері

  // Малюємо книжку
  fill(255, 255, 255); // Колір обкладинки книжки
  rect(width / 2 + 20, height / 2 + 140, 20, 30); // Книжка на столі

  // Малюємо кошик для сміття
  fill(0, 0, 0); // Колір кошика
  ellipse(width / 1.5 + 80, height / 2 + 220, 30, 30); // Кошик для сміття
  fill(255); // Колір сміття
  ellipse(width / 1.5 + 80, height / 2 + 220, 10, 10); // Сміття в кошику
}

void drawInfoTable() {
  int tableX = 10;
  int tableY = height - 250;
  fill(100, 50, 0);
  rect(tableX + 85, tableY + 200, 80, 50);
  fill(139, 69, 19);
  rect(tableX, tableY, 250, 200);
  textSize(16);
  textAlign(LEFT, TOP);
  fill(255, 0, 0);
  text("1. Йдіть у коледж для навчання.", tableX + 5, tableY + 5);
  fill(0, 128, 0);
  text("2. Щоб поповнити енергію,", tableX + 5, tableY + 35);
  text("   поїште в їдальні.", tableX + 5, tableY + 55);
  fill(0, 0, 255);
  text("3. Щоб відпочити та поговорити", tableX + 5, tableY + 85);
  text("   з друзякою, зайдіть у гуртожиток.", tableX + 5, tableY + 105);
}

void drawLoadingScreen() {
  background(0);
  fill(255);
  textAlign(CENTER);
  textSize(32);
  text("Ви слухаєте довгу та нудну пару...", width / 2, height / 2);
  if (millis() - loadingStartTime >= 10000) {
    loading = false;
    listenToTeacher();
  }
}

void drawCafeteriaScene() {
  background(200);
  fill(255, 255, 0);
  rect(0, 0, width, height);
  drawVendor();
  fill(255);
  textAlign(CENTER);
  textSize(32);
  text("Ви в їдальні!", width / 2, height / 2 - 100);
  textSize(20);
  text("Натисніть 'E', щоб взаємодіяти з продавцем", width / 2, height / 2 + 20);
  text("Натисніть 'L', щоб залишити їдальню", width / 2, height / 2 + 40);
}

void drawVendor() {
  fill(255, 220, 150);
  ellipse(600, 300, 40, 40);
  fill(0, 0, 0);
  rect(580, 320, 40, 60);
}

void drawProductChoice() {
  background(200);
  fill(255);
  textAlign(CENTER);
  textSize(32);
  text("Обери продукт:", width / 2, height / 2 - 100);
  textSize(20);
  text("1. Булочка (60 хв)", width / 2, height / 2 - 50);
  text("2. Сік (30 хв)", width / 2, height / 2);
  text("3. Морожинно (120 хв)", width / 2, height / 2 + 50);
}

void drawDormitory() {
  fill(0, 0, 255);
  rect(50, height - 550, 325, 225);
  fill(100, 50, 0);
  triangle(50, height - 550, 50 + 325, height - 550, 225, height - 580);
  drawDormitoryWindows();
  fill(100, 50, 0);
  rect(100, height - 375, 30, 50);
  fill(255, 255, 255);
  textSize(18);
  textAlign(CENTER);
}

void drawDormitoryWindows() {
  fill(255);
  rect(80, height - 510, 30, 30);
  rect(120, height - 510, 30, 30);
  rect(80, height - 470, 30, 30);
  rect(120, height - 470, 30, 30);
  rect(180, height - 510, 30, 30);
  rect(220, height - 510, 30, 30);
  rect(180, height - 470, 30, 30);
  rect(220, height - 470, 30, 30);
  rect(280, height - 510, 30, 30);
  rect(320, height - 510, 30, 30);
  rect(280, height - 470, 30, 30);
  rect(320, height - 470, 30, 30);
}

void drawCollege() {
  fill(150, 150, 150);
  rect(750, 100, 250 * 1.25, 200 * 1.25);
  fill(100, 50, 0);
  triangle(750, 100, 750 + 250 * 1.25, 100, 750 + 250 * 0.625, 100 - 30);
  drawCollegeWindows();
  fill(100, 50, 0);
  rect(875, 300, 50, 50);
  fill(255, 255, 255);
}

void drawCollegeWindows() {
  fill(255);
  rect(800, 130, 40, 40);
  rect(890, 130, 40, 40);
  rect(800, 180, 40, 40);
  rect(890, 180, 40, 40);
  rect(980, 130, 40, 40);
  rect(980, 180, 40, 40);
}

void drawCafeteria() {
  fill(255, 255, 0);
  rect(800, 500, 300, 150);
  fill(255);
  rect(830, 540, 40, 40);
  rect(920, 540, 40, 40);
  rect(1010, 540, 40, 40);
  fill(150, 50, 0);
  rect(830, 600, 30, 60);
}

void drawPlayer() {
  fill(0, 128, 0);
  rect(playerX, playerY, playerWidth, playerHeight);
}

void drawHUD() {
  fill(0);
  textSize(16);
  textAlign(LEFT);
  text("Енергія: " + energy, 10, 20);
  text("Час: " + (timePassed / 60) + ":" + nf(timePassed % 60, 2), 10, 40);
}

void updateResources() {
  if (frameCount % 60 == 0) {
    timePassed++;
    if (timePassed % 10 == 0) {
      energy = max(energy - 2, 0);
    }
    if (continuousRunning >= 15) {
      energy = max(energy - 1, 0);
      continuousRunning = 0;
    }
  }
}

void checkEndOfDay() {
  if (timePassed >= 1200) { 
    gameStarted = false; 
    drawEndScreen();
  }
}

void drawEndScreen() {
  background(0, 100, 200);
  fill(255);
  textAlign(CENTER);
  textSize(32);
  text("День завершено!", width / 2, height / 2 - 20);
  textSize(16);
  text("Дякуємо за гру!", width / 2, height / 2 + 20);
}

void enterClass() {
  inClass = true;
  classChoiceMade = false;
}
void enterCafeteria() {
  inCafeteria = true;
  classChoiceMade = false;
}

void leaveClass() {
  inClass = false;
  timePassed += 20;
  classChoiceMade = true;
  playerX = 820;
  playerY = 370;
}

void startListeningToTeacher() {
  loading = true;
  loadingStartTime = millis();
}

void listenToTeacher() {
  inClass = false;
  timePassed += 300;
  classChoiceMade = true;
  playerX = 820;
  playerY = 370;
}
